name: Build Multi-Platform Releases

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  workflow_dispatch:  # Allow manual trigger

jobs:
  build-windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 yt-dlp pyinstaller
        # Add any other dependencies your app needs
        # pip install requests beautifulsoup4 etc.
    
    - name: Build Windows executable
      run: |
        pyinstaller --onefile --windowed --name HwYtVidGrabber HwYtVidGrabber.py
    
    - name: Upload Windows artifact
      uses: actions/upload-artifact@v4
      with:
        name: windows-exe
        path: dist/HwYtVidGrabber.exe

  build-macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 yt-dlp pyinstaller py2app
        # Add any other dependencies your app needs
    
    - name: Build macOS app
      run: |
        # Using PyInstaller for macOS
        pyinstaller --onefile --windowed --name HwYtVidGrabber HwYtVidGrabber.py
        
        # Create DMG (optional, requires create-dmg)
        # brew install create-dmg
        # create-dmg --volname "HwYtVidGrabber" --window-size 600 400 --icon-size 100 --app-drop-link 450 200 HwYtVidGrabber.dmg dist/HwYtVidGrabber.app
    
    - name: Upload macOS artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-app
        path: dist/HwYtVidGrabber

  build-linux-deb:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev python3-pip build-essential fakeroot devscripts dh-python
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 yt-dlp pyinstaller
        # Add any other dependencies your app needs
    
    - name: Build Linux executable
      run: |
        pyinstaller --onefile --name HwYtVidGrabber HwYtVidGrabber.py
    
    - name: Create DEB package structure
      run: |
        mkdir -p hwytvidgrabber/DEBIAN
        mkdir -p hwytvidgrabber/usr/bin
        mkdir -p hwytvidgrabber/usr/share/applications
        mkdir -p hwytvidgrabber/usr/share/pixmaps
        
        # Copy executable
        cp dist/HwYtVidGrabber hwytvidgrabber/usr/bin/
        chmod +x hwytvidgrabber/usr/bin/HwYtVidGrabber
        
        # Create control file
        cat > hwytvidgrabber/DEBIAN/control << EOF
        Package: hwytvidgrabber
        Version: 1.0.0
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Your Name <your.email@example.com>
        Description: HwYtVidGrabber - YouTube Video Downloader
         A PyQt6-based YouTube video downloader application.
        Depends: python3, python3-pyqt6
        EOF
        
        # Create desktop entry
        cat > hwytvidgrabber/usr/share/applications/hwytvidgrabber.desktop << EOF
        [Desktop Entry]
        Name=HwYtVidGrabber
        Comment=YouTube Video Downloader
        Exec=/usr/bin/HwYtVidGrabber
        Icon=hwytvidgrabber
        Terminal=false
        Type=Application
        Categories=AudioVideo;Network;
        EOF
    
    - name: Build DEB package
      run: |
        dpkg-deb --build hwytvidgrabber
        mv hwytvidgrabber.deb HwYtVidGrabber.deb
    
    - name: Upload DEB artifact
      uses: actions/upload-artifact@v4
      with:
        name: linux-deb
        path: HwYtVidGrabber.deb

  create-release:
    needs: [build-windows, build-macos, build-linux-deb]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
    
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-exe/HwYtVidGrabber.exe
          macos-app/HwYtVidGrabber
          linux-deb/HwYtVidGrabber.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
